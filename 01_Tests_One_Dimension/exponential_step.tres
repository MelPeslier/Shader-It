[gd_resource type="Shader" format=3 uid="uid://lpgn28eueriw"]

[resource]
code = "shader_type canvas_item;

uniform vec4 bg_color : source_color = vec4(vec3(0.0), 1.0);
uniform vec4 line_color : source_color = vec4(vec3(1.0), 1.0);
uniform float line_width : hint_range(0.0, 1.0) = 0.04;
uniform float line_smoothness : hint_range(0.0, 1.0) = 0.039;
uniform float taille_graph : hint_range(0.5, 20.0) = 3.0;
uniform float coef : hint_range(-2.0, 5.0) = 1.0;
uniform float power : hint_range(0.1, 20.0) = 1.0;


float exponential_step(float x, float k, float n){
	return exp(-k * pow(x, n));
}

float f(vec2 uv){
	return abs(exponential_step(-uv.x, coef , power) - uv.y);
}

void fragment() {
	float mix_value = smoothstep(line_width, line_smoothness,
		f(taille_graph / 2.0 - UV * taille_graph));
	
	COLOR = mix(bg_color, line_color, mix_value);
}"
